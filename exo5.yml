openapi: 3.0.3
info:
  title: Products and Orders API
  description: An API for managing products and orders, with pagination and Basic Authentication for order creation.
  version: 1.0.0
components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          example: Apple
        expiration_datetime:
          type: string
          format: date-time
          example: 2025-12-31T23:59:59Z
        price:
          type: number
          format: float
          example: 1.99
      required:
        - name
        - expiration_datetime
        - price
    Order:
      type: object
      properties:
        identifier:
          type: integer
          example: 1
        customer_name:
          type: string
          example: John Doe
        creation_datetime:
          type: string
          format: date-time
          example: 2025-08-26T15:13:00Z
        total_amount:
          type: number
          format: float
          example: 29.99
      required:
        - identifier
        - customer_name
        - creation_datetime
        - total_amount
  parameters:
    PageParam:
      name: page
      in: query
      description: The page number to retrieve.
      required: false
      schema:
        type: integer
        minimum: 1
        default: 1
      example: 1
    SizeParam:
      name: size
      in: query
      description: The number of items per page.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
      example: 20
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
paths:
  /products:
    get:
      tags:
        - Products
      summary: Search products
      description: Retrieves a paginated list of products.
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              examples:
                multipleProducts:
                  summary: Example with multiple products
                  value:
                    - name: Apple
                      expiration_datetime: 2025-12-31T23:59:59Z
                      price: 1.99
                    - name: Banana
                      expiration_datetime: 2025-11-15T23:59:59Z
                      price: 0.99
                emptyList:
                  summary: Example with no products
                  value: []
  /orders:
    get:
      tags:
        - Orders
      summary: Retrieve orders
      description: Returns a paginated list of orders.
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/SizeParam'
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
              examples:
                multipleOrders:
                  summary: Example with multiple orders
                  value:
                    - identifier: 1
                      customer_name: John Doe
                      creation_datetime: 2025-08-26T15:13:00Z
                      total_amount: 29.99
                    - identifier: 2
                      customer_name: Jane Smith
                      creation_datetime: 2025-08-25T10:00:00Z
                      total_amount: 45.50
                emptyList:
                  summary: Example with no orders
                  value: []
    post:
      tags:
        - Orders
      summary: Create a new order
      description: Creates a new order with the provided details, protected by Basic Authentication.
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
            examples:
              createOrder:
                summary: Example of a new order
                value:
                  identifier: 3
                  customer_name: Alice Brown
                  creation_datetime: 2025-08-26T15:30:00Z
                  total_amount: 19.99
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
              examples:
                createdOrder:
                  summary: Example of created order
                  value:
                    identifier: 3
                    customer_name: Alice Brown
                    creation_datetime: 2025-08-26T15:30:00Z
                    total_amount: 19.99
